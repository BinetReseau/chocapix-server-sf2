security:
    encoders:
        BR\BarBundle\Entity\Auth\User:
            algorithm: bcrypt

    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: [ ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH ]

    providers:
        administrators:
            entity: { class: BRBarBundle:User, property: username }

    firewalls:
        oauth_token:
            pattern:    ^/oauth/v2/token
            security:   false

        oauth_authorize:
            pattern:    ^/oauth/v2/auth
            http_basic: ~ # Add your favorite authentication process here

        main:
            pattern:    ^/
            fos_oauth:  true
            stateless:  true
            anonymous:  true

#         dev:
#             pattern:  ^/(_(profiler|wdt)|css|images|js)/
#             security: false

#         login:
#             pattern:  ^/demo/secured/login$
#             security: false

#         secured_area:
#             pattern:    ^/demo/secured/
#             form_login:
#                 check_path: _security_check
#                 login_path: _demo_login
#             logout:
#                 path:   _demo_logout
#                 target: _demo
#             #anonymous: ~
#             #http_basic:
#             #    realm: "Secured Demo Area"

#     providers:
#         in_memory:
#             memory:
#                 users:
#                     user:  { password: userpass, roles: [ 'ROLE_USER' ] }
#                     admin: { password: adminpass, roles: [ 'ROLE_ADMIN' ] }


#     access_control:
#         #- { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }
